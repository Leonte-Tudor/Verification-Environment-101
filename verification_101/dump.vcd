$date
Thu Sep 29 06:32:44 2022
$end
$version
Riviera-PRO Version 2022.04.117.8517
$end
$timescale
1 ps
$end

$scope module tb_RTL $end
$var reg 1 ! clk $end

$scope module in_if $end
$var reg 2 " myMode [1:0] $end
$var reg 1 # chip_en_lifo $end
$var reg 1 $ chip_en_fifo $end
$var reg 1 % chip_en_buffer $end
$var reg 8 & din [7:0] $end
$var reg 1 ' push $end
$var reg 1 ( pop $end
$var reg 1 ) reset $end
$upscope $end


$scope module out_if $end
$var reg 1 * empty $end
$var reg 1 + full $end
$var reg 8 , dout [7:0] $end
$upscope $end


$scope module DUT $end
$var wire 2 - myMode [1:0] $end
$var wire 1 . chip_en_lifo $end
$var wire 1 / chip_en_fifo $end
$var wire 1 0 chip_en_buffer $end
$var wire 8 1 din [7:0] $end
$var wire 1 2 clk $end
$var wire 1 3 push $end
$var wire 1 4 pop $end
$var wire 1 5 reset $end
$var reg 1 6 empty $end
$var reg 1 7 full $end
$var reg 8 8 dout [7:0] $end
$var reg 8 9 index [7:0] $end
$var reg 8 : i [7:0] $end
$var reg 8 ; maxMem [7:0] $end
$var reg 4 < currentDim [3:0] $end
$var reg 2 = mode [1:0] $end
$var parameter 32 > MEM_SIZE [31:0] $end
$var parameter 32 ? LIFO [31:0] $end
$var parameter 32 @ FIFO [31:0] $end
$var parameter 32 A BUFFER [31:0] $end
$upscope $end

$upscope $end

$enddefinitions $end
$dumpvars
0!
bx "
x#
x$
x%
bx &
x'
x(
x)
x*
x+
bx ,
bx -
x.
x/
x0
bx 1
02
x3
x4
x5
x6
x7
bx 8
bx 9
bx :
b1111 ;
b0 <
b0 =
b11111111 >
b0 ?
b1 @
b10 A
$end
#5000
1!
12
#10000
0!
02
#14000
b10101001 &
b0 "
1#
0$
0%
1'
1(
1)
15
14
13
00
0/
1.
b0 -
b10101001 1
b1111 9
b0 8
06
07
b0 ,
0*
0+
#15000
1!
12
b1 <
#20000
0!
02
#24000
b10011011 &
b10011011 1
#25000
1!
12
b10 <
#30000
0!
02
#34000
b100011 &
b100011 1
#35000
1!
12
b11 <
#40000
0!
02
#44000
b1111110 &
0)
05
b1111110 1
#45000
1!
12
b100 <
#50000
0!
02
#54000
b1100100 &
0'
03
b1100100 1
#55000
1!
12
b11 <
b1111110 8
b1111110 ,
#60000
0!
02
#64000
b10100001 &
b10100001 1
#65000
1!
12
b10 <
b100011 8
b100011 ,
#70000
0!
02
#74000
b11101011 &
b11101011 1
#75000
1!
12
b1 <
b10011011 8
b10011011 ,
#80000
0!
02
#84000
b1001110 &
b1001110 1
#85000
1!
12
b0 <
b10101001 8
b10101001 ,
#90000
0!
02
#94000
b111000 &
b111000 1
#95000
1!
12
16
1*
#100000
0!
02
#104000
b11000111 &
b11000111 1
#105000
1!
12
#110000
0!
02
#114000
b1001 &
b1001 1
#115000
1!
12
#120000
0!
02
#124000
b1111001 &
b1111001 1
#125000
1!
12
#130000
0!
02
#134000
b1000000 &
b1000000 1
#135000
1!
12
#140000
0!
02
#144000
b1101001 &
b1101001 1
#145000
1!
12
#150000
0!
02
#154000
b11101 &
b11101 1
#155000
1!
12
#160000
0!
02
#164000
b1001111 &
b1001111 1
#165000
1!
12
#170000
0!
02
#174000
b10101011 &
b10101011 1
#175000
1!
12
#180000
0!
02
#184000
b1010100 &
b1010100 1
#185000
1!
12
#190000
0!
02
#194000
b10001011 &
b10001011 1
#195000
1!
12
#200000
0!
02
#204000
b1110001 &
b1110001 1
#205000
1!
12
#210000
0!
02
#215000
1!
12
#220000
0!
02
#225000
1!
12
#230000
0!
02
#235000
1!
12
#240000
0!
02
#245000
1!
12
#250000
0!
02
#255000
1!
12
#260000
0!
02
#265000
1!
12
#270000
0!
02
#275000
1!
12
#280000
0!
02
#285000
1!
12
#290000
0!
02
#295000
1!
12
#300000
